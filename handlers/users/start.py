import logging  # –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å–ø–æ—Å–æ–± –∑–∞–ø–∏—Å–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ñ–∞–π–ª –∏–ª–∏ –∫–æ–Ω—Å–æ–ª—å
from aiogram import types
from aiogram.types import CallbackQuery
from keyboards.default import kb_start
from keyboards.inline import ikb_start
from loader import dp
from utils.misc import rate_limit
from utils.db_api import quick_commands as commands


@rate_limit(limit=10)
@dp.message_handler(text='/start')
async def menu(message: types.Message):
    try:
        user = await commands.select_user(message.from_user.id)  # –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
        if not user:
            # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
            await commands.add_user(user_id=message.from_user.id,
                                    first_name=message.from_user.first_name,
                                    last_name=message.from_user.last_name,
                                    username=message.from_user.username)
    except Exception as ex:
        logging.exception(ex)
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –≠—Ç–æ - –±–æ—Ç –ú–µ–¥–∏–∫–æ-–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–ª–ª–µ–¥–∂–∞ üè´üè•',
                         reply_markup=ikb_start)
    await message.answer('–ü–æ–¥—Å–∫–∞–∂–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫–∞–∫–æ–π —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –¥–µ–Ω—å?', reply_markup=kb_start)


@dp.callback_query_handler(text='info')
async def menu(call: CallbackQuery):
    await call.answer('‚Ä¢ –ë–æ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º\n'
                      '‚Ä¢ –ë–æ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –≤ –õ–°\n'
                      '‚Ä¢ –£–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –º–æ–∂–Ω–æ –∫–∞–∫ –Ω–∞–∂–∞–≤ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫, —Ç–∞–∫ –∏ –æ—Ç–ø—Ä–∞–≤–∏–≤ —á–∏—Å–ª–æ –º–µ—Å—è—Ü–∞',
                      show_alert=True)
